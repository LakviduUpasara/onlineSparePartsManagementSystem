/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-05-15 13:03:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.http.Cookie;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("javax.servlet.http.Cookie");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    String savedEmail = "";
    boolean rememberChecked = false;

    Cookie[] cookies = request.getCookies();
    if (cookies != null) {
        for (Cookie cookie : cookies) {
            if ("userEmail".equals(cookie.getName())) {
                savedEmail = cookie.getValue();
                rememberChecked = true;
            }
        }
    }

    String error = request.getParameter("error");
    String errorMessage = "";
    if ("invalid".equals(error)) {
        errorMessage = "Invalid email or password.";
    } else if ("missing".equals(error)) {
        errorMessage = "Please enter email and password.";
    } else if ("unknown_role".equals(error)) {
        errorMessage = "User role not recognized.";
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <title>Login - Spare Parts Management System</title>\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("  <style>\r\n");
      out.write("    body {\r\n");
      out.write("      background: linear-gradient(135deg, #1E40AF 0%, #3B82F6 100%);\r\n");
      out.write("      min-height: 100vh;\r\n");
      out.write("      color: white;\r\n");
      out.write("    }\r\n");
      out.write("    .input-glow:focus {\r\n");
      out.write("      box-shadow: 0 0 6px #3B82F6;\r\n");
      out.write("      border-color: #3B82F6;\r\n");
      out.write("    }\r\n");
      out.write("    .is-invalid {\r\n");
      out.write("      border-color: #dc3545 !important;\r\n");
      out.write("    }\r\n");
      out.write("    .error-alert {\r\n");
      out.write("      background-color: rgba(220, 53, 69, 0.9);\r\n");
      out.write("      border: none;\r\n");
      out.write("      border-radius: 8px;\r\n");
      out.write("      color: white;\r\n");
      out.write("      font-weight: 500;\r\n");
      out.write("      animation: fadeIn 0.3s ease-in;\r\n");
      out.write("      margin-bottom: 1.5rem;\r\n");
      out.write("    }\r\n");
      out.write("    @keyframes fadeIn {\r\n");
      out.write("      from { opacity: 0; transform: translateY(-10px); }\r\n");
      out.write("      to { opacity: 1; transform: translateY(0); }\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-light bg-light shadow-sm sticky-top\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand fw-bold text-primary\" href=\"#\">\r\n");
      out.write("      Welcome to Spare Parts Management System\r\n");
      out.write("    </a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\r\n");
      out.write("      aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarNav\">\r\n");
      out.write("      <ul class=\"navbar-nav ms-auto\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active text-primary\" href=\"#\">Home</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link text-primary\" href=\"customerLogin.jsp\">Login as Customer</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link text-primary\" href=\"adminLogin.jsp\">Login as Administrator</a>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container d-flex align-items-center justify-content-center\" style=\"min-height: 90vh;\">\r\n");
      out.write("  <div class=\"card p-4 shadow-lg\" style=\"width: 100%; max-width: 400px; background-color: rgba(255,255,255,0.1); border-radius: 15px;\">\r\n");
      out.write("    <div class=\"text-center mb-4\">\r\n");
      out.write("      <svg class=\"mx-auto mb-2\" width=\"64\" height=\"64\" fill=\"none\" stroke=\"white\" stroke-width=\"2\"\r\n");
      out.write("           viewBox=\"0 0 24 24\">\r\n");
      out.write("        <path d=\"M3 3h2l.4 2M7 13h10l4-8H5.4\" />\r\n");
      out.write("        <circle cx=\"9\" cy=\"21\" r=\"1\" />\r\n");
      out.write("        <circle cx=\"20\" cy=\"21\" r=\"1\" />\r\n");
      out.write("        <path d=\"M12 9v3m0 0l-1-1m1 1l1-1\" />\r\n");
      out.write("      </svg>\r\n");
      out.write("      <h3 class=\"text-white\">Spare Parts Management System</h3>\r\n");
      out.write("      <p class=\"text-light small\">Secure login portal</p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    ");
 if (!errorMessage.isEmpty()) { 
      out.write("\r\n");
      out.write("      <div class=\"alert alert-danger alert-dismissible error-alert\" role=\"alert\" aria-live=\"assertive\">\r\n");
      out.write("        <div>");
      out.print( errorMessage );
      out.write("</div>\r\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n");
      out.write("      </div>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <form action=\"LoginServlet\" method=\"post\" onsubmit=\"return validateForm();\">\r\n");
      out.write("      <div class=\"mb-3\">\r\n");
      out.write("        <label for=\"email\" class=\"form-label text-white\">Email</label>\r\n");
      out.write("        <input type=\"email\" id=\"email\" name=\"email\"\r\n");
      out.write("               class=\"form-control input-glow\"\r\n");
      out.write("               value=\"");
      out.print( savedEmail );
      out.write("\" required>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"mb-3\">\r\n");
      out.write("        <label for=\"password\" class=\"form-label text-white\">Password</label>\r\n");
      out.write("        <input type=\"password\" id=\"password\" name=\"password\"\r\n");
      out.write("               class=\"form-control input-glow\" required>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"d-grid\">\r\n");
      out.write("        <button type=\"submit\" class=\"btn btn-primary\">Sign In</button>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"d-flex justify-content-between mt-3 small text-light\">\r\n");
      out.write("        <div>\r\n");
      out.write("          <input type=\"checkbox\" id=\"remember\" name=\"remember\" ");
      out.print( rememberChecked ? "checked" : "" );
      out.write(">\r\n");
      out.write("          <label for=\"remember\">Remember me</label>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </form>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  function validateForm() {\r\n");
      out.write("    const email = document.getElementById(\"email\");\r\n");
      out.write("    const password = document.getElementById(\"password\");\r\n");
      out.write("    const emailRegex = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;\r\n");
      out.write("    let valid = true;\r\n");
      out.write("\r\n");
      out.write("    if (!emailRegex.test(email.value)) {\r\n");
      out.write("      email.classList.add(\"is-invalid\");\r\n");
      out.write("      valid = false;\r\n");
      out.write("    } else {\r\n");
      out.write("      email.classList.remove(\"is-invalid\");\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    if (password.value.length < 6) {\r\n");
      out.write("      password.classList.add(\"is-invalid\");\r\n");
      out.write("      valid = false;\r\n");
      out.write("    } else {\r\n");
      out.write("      password.classList.remove(\"is-invalid\");\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    return valid;\r\n");
      out.write("  }\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
