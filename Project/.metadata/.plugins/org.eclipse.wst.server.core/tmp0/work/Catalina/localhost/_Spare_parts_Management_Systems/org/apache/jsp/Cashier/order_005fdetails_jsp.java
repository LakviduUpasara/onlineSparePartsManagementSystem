/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-05-14 20:02:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Cashier;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.spareparts.model.*;
import java.text.DecimalFormat;

public final class order_005fdetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.spareparts.model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.text.DecimalFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"/error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Full Trade Support - Order Bill</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/bootstrap.min.css\" rel=\"stylesheet\" media=\"print\" onload=\"this.media='all'\">\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\" rel=\"stylesheet\" integrity=\"sha512-A8kq5D4Y6Q3u5nF4Osk6M4s3hZcIdvKS0EXVaM3vKL+xnF3l5g2Z+BlI9yGddALf6nWrXg1WXDxK38g/Mq2bCQA==\" crossorigin=\"anonymous\">\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/fontawesome.min.css\" rel=\"stylesheet\" media=\"print\" onload=\"this.media='all'\">\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        body { display: flex; min-height: 100vh; overflow-x: hidden; }\r\n");
      out.write("        .sidebar { width: 250px; background-color: #001f3f; color: #fff; flex-shrink: 0; padding-top: 1rem; }\r\n");
      out.write("        .sidebar a { display: block; padding: 12px 20px; color: #fff; text-decoration: none; transition: background 0.3s; }\r\n");
      out.write("        .sidebar a:hover { background-color: #003366; }\r\n");
      out.write("        .sidebar h5 { text-align: center; margin-bottom: 1rem; font-weight: bold; }\r\n");
      out.write("        .main-content { flex-grow: 1; background: #f8f9fa; }\r\n");
      out.write("        .navbar { background-color: #ffffff; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\r\n");
      out.write("        .dashboard-content { padding: 2rem; }\r\n");
      out.write("        .custom-header { background-color: #0d0b56; color: white; }\r\n");
      out.write("        .btn-primary { background-color: #0d0b56; border-color: #0d0b56; }\r\n");
      out.write("        .btn-primary:hover { background-color: #003366; border-color: #003366; }\r\n");
      out.write("        .bill-logo { max-width: 80px; margin: 0 auto; display: block; }\r\n");
      out.write("        .bill-table { width: 100%; border-collapse: collapse; margin: 1rem 0; }\r\n");
      out.write("        .bill-table th, .bill-table td { border: 1px solid #000; padding: 8px; text-align: left; }\r\n");
      out.write("        .bill-table th { background-color: #e9ecef; font-weight: bold; }\r\n");
      out.write("        .bill-content { font-size: 14px; max-width: 210mm; margin: 0 auto; padding: 20px; }\r\n");
      out.write("        .bill-content h3 { text-align: center; margin-bottom: 1rem; }\r\n");
      out.write("        .bill-content p { margin: 0.5rem 0; }\r\n");
      out.write("        @media print {\r\n");
      out.write("            body { display: block; margin: 0; padding: 0; }\r\n");
      out.write("            .no-print, .sidebar, .navbar, .dashboard-content > *:not(.bill-content) { display: none !important; }\r\n");
      out.write("            .bill-content {\r\n");
      out.write("                width: 210mm;\r\n");
      out.write("                height: auto;\r\n");
      out.write("                margin: 0;\r\n");
      out.write("                padding: 10mm;\r\n");
      out.write("                box-sizing: border-box;\r\n");
      out.write("                font-size: 12pt;\r\n");
      out.write("                color: #000;\r\n");
      out.write("                background: #fff;\r\n");
      out.write("                position: relative;\r\n");
      out.write("            }\r\n");
      out.write("            .bill-logo { max-width: 60px; }\r\n");
      out.write("            .bill-table { page-break-inside: auto; }\r\n");
      out.write("            .bill-table tr { page-break-inside: avoid; page-break-after: auto; }\r\n");
      out.write("            @page { size: A4; margin: 0; }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"sidebar\">\r\n");
      out.write("        <h5>Admin Panel</h5>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/dashboard\"><i class=\"fas fa-chart-line me-2\"></i> Dashboard</a>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/GetAllServlet\"><i class=\"fas fa-users me-2\"></i>User Management</a>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/stock-manager\"><i class=\"fas fa-boxes me-2\"></i>Stock Manager</a>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/order-management\"><i class=\"fas fa-shopping-cart me-2\"></i>Order Management</a>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/cashier\"><i class=\"fas fa-cash-register me-2\"></i>Cashier</a>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/item-list\"><i class=\"fas fa-box me-2\"></i>Item Management</a>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/customer-management\"><i class=\"fas fa-user-friends me-2\"></i>Customer Management</a>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/supplier-list\"><i class=\"fas fa-truck me-2\"></i>Supplier Management</a>\r\n");
      out.write("        <a href=\"#\"><i class=\"fas fa-arrow-up-right-from-square me-2\"></i>Outgoing Products</a>\r\n");
      out.write("        <a href=\"#\"><i class=\"fas fa-arrow-down-to-line me-2\"></i>Purchase Products</a>\r\n");
      out.write("        <a href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#settingsMenu\"><i class=\"fas fa-gear me-2\"></i>Settings</a>\r\n");
      out.write("        <div class=\"collapse ms-3\" id=\"settingsMenu\">\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/profile.jsp\" class=\"d-block mt-1\"><i class=\"fas fa-id-badge me-2\"></i>Profile Settings</a>\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/profile.jsp\" class=\"d-block mt-1\"><i class=\"fas fa-lock me-2\"></i>Change Password</a>\r\n");
      out.write("            <a href=\"#\" class=\"d-block mt-1\"><i class=\"fas fa-sliders-h me-2\"></i>System Preferences</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"main-content w-100\">\r\n");
      out.write("        <nav class=\"navbar navbar-expand-lg navbar-light px-4\">\r\n");
      out.write("            <a class=\"navbar-brand fw-bold\" href=\"#\">Full Trade Support</a>\r\n");
      out.write("            <div class=\"ms-auto d-flex align-items-center\">\r\n");
      out.write("                <span class=\"me-3\">Welcome, <strong>");
      out.print( session.getAttribute("userName") != null ? session.getAttribute("userName") : "Guest" );
      out.write("</strong></span>\r\n");
      out.write("                <div class=\"dropdown\">\r\n");
      out.write("                    <a class=\"btn btn-light dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\">\r\n");
      out.write("                        <i class=\"fas fa-user-circle fa-lg\"></i>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <ul class=\"dropdown-menu dropdown-menu-end\">\r\n");
      out.write("                        <li><a class=\"dropdown-item\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/profile.jsp\"><i class=\"fas fa-id-badge me-2\"></i>Profile</a></li>\r\n");
      out.write("                        <li><a class=\"dropdown-item\" href=\"#\"><i class=\"fas fa-cogs me-2\"></i>Settings</a></li>\r\n");
      out.write("                        <li><hr class=\"dropdown-divider\"></li>\r\n");
      out.write("                        <li><a class=\"dropdown-item text-danger\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/LogoutServlet\"><i class=\"fas fa-sign-out-alt me-2\"></i>Logout</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"dashboard-content\">\r\n");
      out.write("            <h2>Order Bill</h2>\r\n");
      out.write("            <p>View and print bill details for the selected order:</p>\r\n");
      out.write("            ");
 String error = (String) request.getAttribute("error"); 
      out.write("\r\n");
      out.write("            ");
 String success = (String) request.getAttribute("success"); 
      out.write("\r\n");
      out.write("            ");
 if (error != null) { 
      out.write("\r\n");
      out.write("                <div class=\"alert alert-danger\">");
      out.print( error );
      out.write("</div>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("            ");
 if (success != null) { 
      out.write("\r\n");
      out.write("                <div class=\"alert alert-success\">");
      out.print( success );
      out.write("</div>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <div class=\"bill-content\" id=\"billContent\">\r\n");
      out.write("                ");
 
                    Order billOrder = (Order) request.getAttribute("billOrder"); 
                    Customer billCustomer = (Customer) request.getAttribute("billCustomer"); 
                    List<OrderDetail> billOrderDetails = (List<OrderDetail>) request.getAttribute("billOrderDetails"); 
                    Map<Integer, String> itemNames = (Map<Integer, String>) request.getAttribute("itemNames"); 
                
      out.write("\r\n");
      out.write("                ");
 if (billOrder != null && billCustomer != null && billOrderDetails != null && itemNames != null && !billOrderDetails.isEmpty()) { 
      out.write("\r\n");
      out.write("                    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/images/spare_parts_logo.png\" alt=\"Full Trade Support Logo\" class=\"bill-logo\" onerror=\"this.src='https://via.placeholder.com/60';\">\r\n");
      out.write("                    <h3>Full Trade Support</h3>\r\n");
      out.write("                    <p><strong>Order ID:</strong> ");
      out.print( billOrder.getOrderID() );
      out.write("</p>\r\n");
      out.write("                    <p><strong>Customer ID:</strong> ");
      out.print( billCustomer.getCustomerID() );
      out.write("</p>\r\n");
      out.write("                    <p><strong>Customer Name:</strong> ");
      out.print( billCustomer.getCustomerName() != null ? billCustomer.getCustomerName() : "N/A" );
      out.write("</p>\r\n");
      out.write("                    <p><strong>Contact Number:</strong> ");
      out.print( billCustomer.getContactNumber() != null ? billCustomer.getContactNumber() : "N/A" );
      out.write("</p>\r\n");
      out.write("                    <p><strong>Order Date:</strong> ");
      out.print( billOrder.getOrderDate() != null ? billOrder.getOrderDate() : "N/A" );
      out.write("</p>\r\n");
      out.write("                    <table class=\"bill-table\">\r\n");
      out.write("                        <thead>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>Item</th>\r\n");
      out.write("                                <th>Unit Price</th>\r\n");
      out.write("                                <th>Quantity</th>\r\n");
      out.write("                                <th>Total</th>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("                            ");
 double subtotal = 0; 
      out.write("\r\n");
      out.write("                            ");
 for (OrderDetail detail : billOrderDetails) { 
      out.write("\r\n");
      out.write("                                ");
 
                                    String itemName = itemNames.getOrDefault(detail.getItemID(), "Unknown"); 
                                    double itemTotal = detail.getQuantity() * detail.getUnitPrice(); 
                                    subtotal += itemTotal; 
                                
      out.write("\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <td>");
      out.print( itemName );
      out.write("</td>\r\n");
      out.write("                                    <td>$");
      out.print( new DecimalFormat("#,##0.00").format(detail.getUnitPrice()) );
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print( detail.getQuantity() );
      out.write("</td>\r\n");
      out.write("                                    <td>$");
      out.print( new DecimalFormat("#,##0.00").format(itemTotal) );
      out.write("</td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                    <p><strong>Subtotal:</strong> $");
      out.print( new DecimalFormat("#,##0.00").format(subtotal) );
      out.write("</p>\r\n");
      out.write("                    <p><strong>Discount:</strong> ");
      out.print( new DecimalFormat("#,##0.00").format(billOrder.getDiscount()) );
      out.write("%</p>\r\n");
      out.write("                    <p><strong>Total:</strong> $");
      out.print( new DecimalFormat("#,##0.00").format(billOrder.getTotalAmount()) );
      out.write("</p>\r\n");
      out.write("                    <div class=\"mb-3 no-print\">\r\n");
      out.write("                        <label for=\"paidAmount\" class=\"form-label\">Customer Paid Amount ($)</label>\r\n");
      out.write("                        <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"paidAmount\" min=\"0\" value=\"0.00\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <p><strong>Balance:</strong> $<span id=\"balance\">0.00</span></p>\r\n");
      out.write("                ");
 } else { 
      out.write("\r\n");
      out.write("                    <p class=\"text-danger\">No bill details available. Please ensure order data is complete.</p>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"mt-4 no-print\">\r\n");
      out.write("                <button class=\"btn btn-primary me-2\" onclick=\"printBill()\">Print Bill</button>\r\n");
      out.write("                <button class=\"btn btn-primary me-2\" onclick=\"downloadPDF()\">Download PDF</button>\r\n");
      out.write("                <button class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#pdfSettingsModal\">Edit PDF Settings</button>\r\n");
      out.write("                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/cashier\" class=\"btn btn-secondary\">Back to Cashier</a>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- PDF Settings Modal -->\r\n");
      out.write("            <div class=\"modal fade\" id=\"pdfSettingsModal\" tabindex=\"-1\" aria-labelledby=\"pdfSettingsModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("                <div class=\"modal-dialog\">\r\n");
      out.write("                    <div class=\"modal-content\">\r\n");
      out.write("                        <div class=\"modal-header\">\r\n");
      out.write("                            <h5 class=\"modal-title\" id=\"pdfSettingsModalLabel\">PDF Settings</h5>\r\n");
      out.write("                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"modal-body\">\r\n");
      out.write("                            <form id=\"pdfSettingsForm\">\r\n");
      out.write("                                <div class=\"mb-3\">\r\n");
      out.write("                                    <label for=\"logoSize\" class=\"form-label\">Logo Size (px)</label>\r\n");
      out.write("                                    <input type=\"number\" class=\"form-control\" id=\"logoSize\" value=\"60\" min=\"40\" max=\"150\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"mb-3\">\r\n");
      out.write("                                    <label for=\"fontSize\" class=\"form-label\">Font Size (pt)</label>\r\n");
      out.write("                                    <input type=\"number\" class=\"form-control\" id=\"fontSize\" value=\"12\" min=\"8\" max=\"14\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"mb-3\">\r\n");
      out.write("                                    <label for=\"pageMargin\" class=\"form-label\">Page Margin (mm)</label>\r\n");
      out.write("                                    <input type=\"number\" class=\"form-control\" id=\"pageMargin\" value=\"10\" min=\"5\" max=\"20\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"mb-3\">\r\n");
      out.write("                                    <label for=\"orientation\" class=\"form-label\">Orientation</label>\r\n");
      out.write("                                    <select class=\"form-control\" id=\"orientation\">\r\n");
      out.write("                                        <option value=\"portrait\">Portrait</option>\r\n");
      out.write("                                        <option value=\"landscape\">Landscape</option>\r\n");
      out.write("                                    </select>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"modal-footer\">\r\n");
      out.write("                            <button type=\"button\" class=\"btn btn-primary\" onclick=\"applyPDFSettings()\">Apply</button>\r\n");
      out.write("                            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        if (typeof bootstrap === 'undefined') {\r\n");
      out.write("            document.write('<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/bootstrap.bundle.min.js\"><\\/script>');\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    <script>\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            const paidAmountInput = document.getElementById('paidAmount');\r\n");
      out.write("            const balanceSpan = document.getElementById('balance');\r\n");
      out.write("            const totalAmount = parseFloat('");
      out.print( billOrder != null ? billOrder.getTotalAmount() : 0 );
      out.write("');\r\n");
      out.write("\r\n");
      out.write("            function updateBalance() {\r\n");
      out.write("                const paid = parseFloat(paidAmountInput.value) || 0;\r\n");
      out.write("                const balance = paid - totalAmount;\r\n");
      out.write("                balanceSpan.textContent = balance.toFixed(2);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (paidAmountInput) {\r\n");
      out.write("                paidAmountInput.addEventListener('input', updateBalance);\r\n");
      out.write("                updateBalance();\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function printBill() {\r\n");
      out.write("            window.print();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        let pdfSettings = {\r\n");
      out.write("            logoSize: 60,\r\n");
      out.write("            fontSize: 12,\r\n");
      out.write("            pageMargin: 10,\r\n");
      out.write("            orientation: 'portrait'\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        function applyPDFSettings() {\r\n");
      out.write("            pdfSettings.logoSize = parseInt(document.getElementById('logoSize').value) || 60;\r\n");
      out.write("            pdfSettings.fontSize = parseInt(document.getElementById('fontSize').value) || 12;\r\n");
      out.write("            pdfSettings.pageMargin = parseInt(document.getElementById('pageMargin').value) || 10;\r\n");
      out.write("            pdfSettings.orientation = document.getElementById('orientation').value || 'portrait';\r\n");
      out.write("            document.querySelector('.bill-logo').style.maxWidth = pdfSettings.logoSize + 'px';\r\n");
      out.write("            document.querySelector('.bill-content').style.fontSize = pdfSettings.fontSize + 'pt';\r\n");
      out.write("            bootstrap.Modal.getInstance(document.getElementById('pdfSettingsModal')).hide();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function downloadPDF() {\r\n");
      out.write("            const { jsPDF } = window.jspdf;\r\n");
      out.write("            const billContent = document.getElementById('billContent');\r\n");
      out.write("            const originalLogoSize = billContent.querySelector('.bill-logo').style.maxWidth;\r\n");
      out.write("            const originalFontSize = billContent.style.fontSize;\r\n");
      out.write("            billContent.querySelector('.bill-logo').style.maxWidth = pdfSettings.logoSize + 'px';\r\n");
      out.write("            billContent.style.fontSize = pdfSettings.fontSize + 'pt';\r\n");
      out.write("\r\n");
      out.write("            html2canvas(billContent, { scale: 2 }).then(canvas => {\r\n");
      out.write("                const imgData = canvas.toDataURL('image/png');\r\n");
      out.write("                const pdf = new jsPDF({\r\n");
      out.write("                    orientation: pdfSettings.orientation,\r\n");
      out.write("                    unit: 'mm',\r\n");
      out.write("                    format: 'a4'\r\n");
      out.write("                });\r\n");
      out.write("                const imgProps = pdf.getImageProperties(imgData);\r\n");
      out.write("                const pdfWidth = pdf.internal.pageSize.getWidth() - 2 * pdfSettings.pageMargin;\r\n");
      out.write("                const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n");
      out.write("                pdf.addImage(imgData, 'PNG', pdfSettings.pageMargin, pdfSettings.pageMargin, pdfWidth, pdfHeight);\r\n");
      out.write("                pdf.save('bill_order_");
      out.print( billOrder != null ? billOrder.getOrderID() : "unknown" );
      out.write(".pdf');\r\n");
      out.write("                billContent.querySelector('.bill-logo').style.maxWidth = originalLogoSize;\r\n");
      out.write("                billContent.style.fontSize = originalFontSize;\r\n");
      out.write("            }).catch(error => {\r\n");
      out.write("                console.error('PDF generation failed:', error);\r\n");
      out.write("                alert('Failed to generate PDF. Please try again.');\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
