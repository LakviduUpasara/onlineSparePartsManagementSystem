/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-05-15 07:54:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.OrderMangments;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.spareparts.model.Order;
import com.spareparts.model.OrderDetail;
import com.spareparts.model.Item;
import com.spareparts.model.Customer;

public final class order_002dupdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("com.spareparts.model.Customer");
    _jspx_imports_classes.add("com.spareparts.model.Order");
    _jspx_imports_classes.add("com.spareparts.model.OrderDetail");
    _jspx_imports_classes.add("com.spareparts.model.Item");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Full Trade Support - Update Order</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/bootstrap.min.css\" rel=\"stylesheet\" media=\"print\" onload=\"this.media='all'\">\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\" rel=\"stylesheet\" integrity=\"sha512-A8kq5D4Y6Q3u5nF4Osk6M4s3hZcIdvKS0EXVaM3vKL+xnF3l5g2Z+BlI9yGddALf6nWrXg1WXDxK38g/Mq2bCQA==\" crossorigin=\"anonymous\">\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/fontawesome.min.css\" rel=\"stylesheet\" media=\"print\" onload=\"this.media='all'\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body { display: flex; min-height: 100vh; overflow-x: hidden; }\r\n");
      out.write("        .sidebar { width: 250px; background-color: #001f3f; color: #fff; flex-shrink: 0; padding-top: 1rem; }\r\n");
      out.write("        .sidebar a { display: block; padding: 12px 20px; color: #fff; text-decoration: none; transition: background 0.3s; }\r\n");
      out.write("        .sidebar a:hover { background-color: #003366; }\r\n");
      out.write("        .sidebar h5 { text-align: center; margin-bottom: 1rem; font-weight: bold; }\r\n");
      out.write("        .main-content { flex-grow: 1; background: #f8f9fa; }\r\n");
      out.write("        .navbar { background-color: #ffffff; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }\r\n");
      out.write("        .dashboard-content { padding: 2rem; }\r\n");
      out.write("        .custom-header { background-color: #0d0b56; color: white; }\r\n");
      out.write("        .btn-primary { background-color: #0d0b56; border-color: #0d0b56; }\r\n");
      out.write("        .btn-primary:hover { background-color: #003366; border-color: #003366; }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    ");
 String userRole = (String) session.getAttribute("userRole"); 
      out.write("\r\n");
      out.write("    <div class=\"sidebar\" id=\"sidebar\">\r\n");
      out.write("        <h5 class=\"text-center fw-bold\">\r\n");
      out.write("            ");
      out.print( userRole != null ? userRole + " Panel" : "Panel" );
      out.write("\r\n");
      out.write("        </h5>\r\n");
      out.write("        ");
 if ("Manager".equals(userRole) || "Admin".equals(userRole)) { 
      out.write("\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/dashboard\">\r\n");
      out.write("                <i class=\"fas fa-chart-line me-2\"></i> Dashboard\r\n");
      out.write("            </a>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/cashier\">\r\n");
      out.write("            <i class=\"fas fa-cash-register me-2\"></i> Cashier\r\n");
      out.write("        </a>\r\n");
      out.write("        \r\n");
      out.write("        ");
 if ("Admin".equals(userRole) || "Manager".equals(userRole)) { 
      out.write("\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/GetAllServlet\">\r\n");
      out.write("                <i class=\"fas fa-users me-2\"></i> User Management\r\n");
      out.write("            </a>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        ");
 if (!"Cashier".equals(userRole)) { 
      out.write("\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/item-list\">\r\n");
      out.write("                <i class=\"fas fa-boxes me-2\"></i> Stock Management\r\n");
      out.write("            </a>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        ");
 if ("Stock Manager".equals(userRole)) { 
      out.write("\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/order-management\">\r\n");
      out.write("                <i class=\"fas fa-shopping-cart me-2\"></i> Order Management\r\n");
      out.write("            </a>\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/item-list\">\r\n");
      out.write("                <i class=\"fas fa-box me-2\"></i> Item Management\r\n");
      out.write("            </a>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        ");
 if ("Admin".equals(userRole) || "Manager".equals(userRole)) { 
      out.write("\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/supplier-list\">\r\n");
      out.write("                <i class=\"fas fa-truck me-2\"></i> Supplier Management\r\n");
      out.write("            </a>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        <a href=\"#\" data-bs-toggle=\"collapse\" data-bs-target=\"#settingsMenu\">\r\n");
      out.write("            <i class=\"fas fa-gear me-2\"></i> Settings\r\n");
      out.write("        </a>\r\n");
      out.write("        <div class=\"collapse ms-3\" id=\"settingsMenu\">\r\n");
      out.write("            <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/profile.jsp\" class=\"d-block mt-1\">\r\n");
      out.write("                <i class=\"fas fa-sliders-h me-2\"></i> Profile\r\n");
      out.write("            </a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"main-content w-100\">\r\n");
      out.write("        <nav class=\"navbar navbar-expand-lg navbar-light bg-white px-4 shadow-sm\">\r\n");
      out.write("            <a class=\"navbar-brand fw-bold\" href=\"#\">Autoparts Pvt Ltd</a>\r\n");
      out.write("            <div class=\"ms-auto d-flex align-items-center\">\r\n");
      out.write("                ");
      out.print( session.getAttribute("Name") != null ? session.getAttribute("Name") : "Guest" );
      out.write("\r\n");
      out.write("                <div class=\"dropdown ms-3\">\r\n");
      out.write("                    <a class=\"btn btn-light dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\">\r\n");
      out.write("                        <i class=\"fas fa-user-circle fa-lg\"></i>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <ul class=\"dropdown-menu dropdown-menu-end\">\r\n");
      out.write("                        <li><a class=\"dropdown-item\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/profile.jsp\"><i class=\"fas fa-id-badge me-2\"></i> Profile</a></li>\r\n");
      out.write("                        <li><hr class=\"dropdown-divider\"></li>\r\n");
      out.write("                        <li><a class=\"dropdown-item text-danger\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/LogoutServlet\"><i class=\"fas fa-sign-out-alt me-2\"></i> Logout</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"dashboard-content\">\r\n");
      out.write("            <h2>Update Order</h2>\r\n");
      out.write("            ");

                Order order = (Order) request.getAttribute("order");
                List<OrderDetail> orderDetails = (List<OrderDetail>) request.getAttribute("orderDetails");
                List<Item> itemList = (List<Item>) request.getAttribute("itemList");
                List<Customer> customerList = (List<Customer>) request.getAttribute("customerList");
                String error = (String) request.getAttribute("error");
                String success = (String) request.getAttribute("success");
                if (error != null) {
            
      out.write("\r\n");
      out.write("                <div class=\"alert alert-danger\">");
      out.print( error );
      out.write("</div>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("            ");
 if (success != null) { 
      out.write("\r\n");
      out.write("                <div class=\"alert alert-success\">");
      out.print( success );
      out.write("</div>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("            ");
 if (order == null) { 
      out.write("\r\n");
      out.write("                <div class=\"alert alert-warning\">Order not found.</div>\r\n");
      out.write("            ");
 } else { 
      out.write("\r\n");
      out.write("                <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/order-update\" method=\"post\" id=\"updateOrderForm\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"orderId\" value=\"");
      out.print( order.getOrderID() );
      out.write("\">\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"customerId\" class=\"form-label\">Customer</label>\r\n");
      out.write("                        <select class=\"form-control\" id=\"customerId\" name=\"customerId\" required>\r\n");
      out.write("                            <option value=\"\">Select Customer</option>\r\n");
      out.write("                            ");

                                if (customerList != null && !customerList.isEmpty()) {
                                    for (Customer customer : customerList) {
                            
      out.write("\r\n");
      out.write("                            <option value=\"");
      out.print( customer.getCustomerID() );
      out.write('"');
      out.write(' ');
      out.print( customer.getCustomerID() == order.getCustomerID() ? "selected" : "" );
      out.write(">\r\n");
      out.write("                                ");
      out.print( customer.getCustomerName() );
      out.write("\r\n");
      out.write("                            </option>\r\n");
      out.write("                            ");
 } } else { 
      out.write("\r\n");
      out.write("                            <option value=\"\" disabled>No customers available</option>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <label for=\"discount\" class=\"form-label\">Discount (%)</label>\r\n");
      out.write("                        <input type=\"number\" step=\"0.01\" class=\"form-control\" id=\"discount\" name=\"discount\" value=\"");
      out.print( order.getDiscount() );
      out.write("\" min=\"0\" max=\"100\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"mb-3\">\r\n");
      out.write("                        <h6>Order Items</h6>\r\n");
      out.write("                        <div id=\"orderItems\">\r\n");
      out.write("                            ");

                                if (orderDetails != null && !orderDetails.isEmpty()) {
                                    for (OrderDetail detail : orderDetails) {
                            
      out.write("\r\n");
      out.write("                            <div class=\"row mb-2\">\r\n");
      out.write("                                <div class=\"col-5\">\r\n");
      out.write("                                    <select class=\"form-control item-select\" name=\"itemId[]\" required>\r\n");
      out.write("                                        <option value=\"\">Select Item</option>\r\n");
      out.write("                                        ");

                                            if (itemList != null && !itemList.isEmpty()) {
                                                for (Item item : itemList) {
                                        
      out.write("\r\n");
      out.write("                                        <option value=\"");
      out.print( item.getItemID() );
      out.write("\" data-price=\"");
      out.print( item.getSellPrice() );
      out.write("\"\r\n");
      out.write("                                                ");
      out.print( item.getItemID() == detail.getItemID() ? "selected" : "" );
      out.write(">\r\n");
      out.write("                                            ");
      out.print( item.getItemName() );
      out.write(" (Stock: ");
      out.print( item.getQty() );
      out.write(")\r\n");
      out.write("                                        </option>\r\n");
      out.write("                                        ");
 } } else { 
      out.write("\r\n");
      out.write("                                        <option value=\"\" disabled>No items available</option>\r\n");
      out.write("                                        ");
 } 
      out.write("\r\n");
      out.write("                                    </select>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-3\">\r\n");
      out.write("                                    <input type=\"number\" class=\"form-control item-qty\" name=\"quantity[]\" value=\"");
      out.print( detail.getQuantity() );
      out.write("\" min=\"1\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-3\">\r\n");
      out.write("                                    <input type=\"number\" step=\"0.01\" class=\"form-control item-price\" value=\"");
      out.print( detail.getUnitPrice() );
      out.write("\" readonly>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-1\">\r\n");
      out.write("                                    <button type=\"button\" class=\"btn btn-danger remove-item\"><i class=\"fas fa-trash\"></i></button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            ");
 } } else { 
      out.write("\r\n");
      out.write("                            <div class=\"row mb-2\">\r\n");
      out.write("                                <div class=\"col-5\">\r\n");
      out.write("                                    <select class=\"form-control item-select\" name=\"itemId[]\" required>\r\n");
      out.write("                                        <option value=\"\">Select Item</option>\r\n");
      out.write("                                        ");

                                            if (itemList != null && !itemList.isEmpty()) {
                                                for (Item item : itemList) {
                                        
      out.write("\r\n");
      out.write("                                        <option value=\"");
      out.print( item.getItemID() );
      out.write("\" data-price=\"");
      out.print( item.getSellPrice() );
      out.write("\">\r\n");
      out.write("                                            ");
      out.print( item.getItemName() );
      out.write(" (Stock: ");
      out.print( item.getQty() );
      out.write(")\r\n");
      out.write("                                        </option>\r\n");
      out.write("                                        ");
 } } else { 
      out.write("\r\n");
      out.write("                                        <option value=\"\" disabled>No items available</option>\r\n");
      out.write("                                        ");
 } 
      out.write("\r\n");
      out.write("                                    </select>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-3\">\r\n");
      out.write("                                    <input type=\"number\" class=\"form-control item-qty\" name=\"quantity[]\" min=\"1\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-3\">\r\n");
      out.write("                                    <input type=\"number\" step=\"0.01\" class=\"form-control item-price\" readonly>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-1\">\r\n");
      out.write("                                    <button type=\"button\" class=\"btn btn-danger remove-item\"><i class=\"fas fa-trash\"></i></button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-secondary mt-2\" id=\"addItem\">Add Item</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div id=\"formError\" class=\"text-danger\" style=\"display: none;\"></div>\r\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-primary\">Update Order</button>\r\n");
      out.write("                    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/order-management\" class=\"btn btn-secondary\">Cancel</a>\r\n");
      out.write("                </form>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        if (typeof bootstrap === 'undefined') {\r\n");
      out.write("            document.write('<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/bootstrap.bundle.min.js\"><\\/script>');\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    <script>\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            const addItemBtn = document.getElementById('addItem');\r\n");
      out.write("            const orderItems = document.getElementById('orderItems');\r\n");
      out.write("            const firstItemRow = orderItems.querySelector('.row').cloneNode(true);\r\n");
      out.write("\r\n");
      out.write("            addItemBtn.addEventListener('click', function() {\r\n");
      out.write("                const newRow = firstItemRow.cloneNode(true);\r\n");
      out.write("                newRow.querySelector('.item-select').value = '';\r\n");
      out.write("                newRow.querySelector('.item-qty').value = '';\r\n");
      out.write("                newRow.querySelector('.item-price').value = '';\r\n");
      out.write("                orderItems.appendChild(newRow);\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            orderItems.addEventListener('click', function(e) {\r\n");
      out.write("                if (e.target.classList.contains('remove-item') || e.target.parentElement.classList.contains('remove-item')) {\r\n");
      out.write("                    const row = e.target.closest('.row');\r\n");
      out.write("                    if (orderItems.querySelectorAll('.row').length > 1) {\r\n");
      out.write("                        row.remove();\r\n");
      out.write("                    } else {\r\n");
      out.write("                        alert('At least one item is required.');\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            orderItems.addEventListener('change', function(e) {\r\n");
      out.write("                if (e.target.classList.contains('item-select')) {\r\n");
      out.write("                    const select = e.target;\r\n");
      out.write("                    const priceInput = select.closest('.row').querySelector('.item-price');\r\n");
      out.write("                    const selectedOption = select.options[select.selectedIndex];\r\n");
      out.write("                    priceInput.value = selectedOption.dataset.price || '';\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            document.getElementById('updateOrderForm').addEventListener('submit', function(e) {\r\n");
      out.write("                const quantities = document.querySelectorAll('.item-qty');\r\n");
      out.write("                const items = document.querySelectorAll('.item-select');\r\n");
      out.write("                let error = '';\r\n");
      out.write("\r\n");
      out.write("                for (let i = 0; i < items.length; i++) {\r\n");
      out.write("                    if (!items[i].value) {\r\n");
      out.write("                        error = 'Please select an item.';\r\n");
      out.write("                        break;\r\n");
      out.write("                    }\r\n");
      out.write("                    const qty = parseInt(quantities[i].value) || 0;\r\n");
      out.write("                    const stockText = items[i].options[items[i].selectedIndex].text;\r\n");
      out.write("                    const stockMatch = stockText.match(/Stock: (\\d+)/);\r\n");
      out.write("                    const stock = stockMatch ? parseInt(stockMatch[1]) : 0;\r\n");
      out.write("                    if (qty <= 0) {\r\n");
      out.write("                        error = `Quantity for ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stockText.split(' (')[0]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" must be positive.`;\r\n");
      out.write("                        break;\r\n");
      out.write("                    }\r\n");
      out.write("                    if (qty > stock) {\r\n");
      out.write("                        error = `Item ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stockText.split(' (')[0]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" is out of stock (available: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${stock}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(").`;\r\n");
      out.write("                        break;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                if (error) {\r\n");
      out.write("                    e.preventDefault();\r\n");
      out.write("                    document.getElementById('formError').textContent = error;\r\n");
      out.write("                    document.getElementById('formError').style.display = 'block';\r\n");
      out.write("                    alert(error);\r\n");
      out.write("                } else {\r\n");
      out.write("                    document.getElementById('formError').style.display = 'none';\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
