/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-05-15 13:34:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.OrderMangments;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.spareparts.model.Order;
import com.spareparts.model.OrderDetail;
import com.spareparts.model.Item;
import com.spareparts.model.Customer;

public final class order_002ddetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("com.spareparts.model.Customer");
    _jspx_imports_classes.add("com.spareparts.model.Order");
    _jspx_imports_classes.add("com.spareparts.model.OrderDetail");
    _jspx_imports_classes.add("com.spareparts.model.Item");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Bill - Full Trade Support</title>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    \r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("        body { background-color: #f8f9fa; }\r\n");
      out.write("        .bill-container { max-width: 800px; margin: 0 auto; padding: 2rem; background: white; border: 1px solid #ddd; }\r\n");
      out.write("        .bill-header { text-align: center; border-bottom: 2px solid #0d0b56; padding-bottom: 1rem; margin-bottom: 2rem; }\r\n");
      out.write("        .bill-header h1 { margin: 0; color: #0d0b56; }\r\n");
      out.write("        .company-logo { max-height: 80px; }\r\n");
      out.write("        .custom-header { background-color: #0d0b56; color: white; }\r\n");
      out.write("        .table th, .table td { vertical-align: middle; }\r\n");
      out.write("        .btn-primary { background-color: #0d0b56; border: none; }\r\n");
      out.write("        .btn-primary:hover { background-color: #003366; }\r\n");
      out.write("        @media print {\r\n");
      out.write("            .no-print { display: none; }\r\n");
      out.write("            body { background: white; }\r\n");
      out.write("            .bill-container { box-shadow: none; border: none; margin: 0; }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");

    Order order = (Order) request.getAttribute("order");
    List<OrderDetail> orderDetails = (List<OrderDetail>) request.getAttribute("orderDetails");
    List<Item> itemList = (List<Item>) request.getAttribute("itemList");
    String error = (String) request.getAttribute("error");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"bill-container\">\r\n");
      out.write("    <div class=\"bill-header\">\r\n");
      out.write("        <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/images/spare_parts_logo.png\" alt=\"Company Logo\" class=\"company-logo mb-2\">\r\n");
      out.write("        <h1>Autoparts Pvt Ltd</h1>\r\n");
      out.write("        <p class=\"mb-0\">No. 123, Industrial Zone, Colombo | +94 77 123 4567 | support@autoparts.lk</p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    ");
 if (error != null) { 
      out.write("\r\n");
      out.write("        <div class=\"alert alert-danger\">");
      out.print( error );
      out.write("</div>\r\n");
      out.write("    ");
 } else if (order == null) { 
      out.write("\r\n");
      out.write("        <div class=\"alert alert-warning\">Order not found.</div>\r\n");
      out.write("    ");
 } else { 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"row mb-4\">\r\n");
      out.write("        <div class=\"col-md-6\">\r\n");
      out.write("            <h5>Customer Information</h5>\r\n");
      out.write("            <p>\r\n");
      out.write("                <strong>Name:</strong> ");
      out.print( order.getCustomerName() != null ? order.getCustomerName() : "N/A" );
      out.write("<br>\r\n");
      out.write("      \r\n");
      out.write("            </p>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"col-md-6 text-end\">\r\n");
      out.write("            <h5>Bill Details</h5>\r\n");
      out.write("            <p>\r\n");
      out.write("                <strong>Order ID:</strong> ");
      out.print( order.getOrderID() );
      out.write("<br>\r\n");
      out.write("                <strong>Date:</strong> ");
      out.print( order.getOrderDate() != null ? order.getOrderDate() : "N/A" );
      out.write("\r\n");
      out.write("            </p>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <table class=\"table table-bordered\">\r\n");
      out.write("        <thead class=\"custom-header\">\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Item</th>\r\n");
      out.write("                <th>Qty</th>\r\n");
      out.write("                <th>Unit Price (Rs.)</th>\r\n");
      out.write("                <th>Total (Rs.)</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("            ");

                double grandTotal = 0;
                for (OrderDetail detail : orderDetails) {
                    Item item = null;
                    for (Item i : itemList) {
                        if (i.getItemID() == detail.getItemID()) {
                            item = i;
                            break;
                        }
                    }
                    double total = detail.getQuantity() * detail.getUnitPrice();
                    grandTotal += total;
            
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>");
      out.print( item != null ? item.getItemName() : "Unknown Item" );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( detail.getQuantity() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( String.format("%.2f", detail.getUnitPrice()) );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( String.format("%.2f", total) );
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"row mt-4\">\r\n");
      out.write("        <div class=\"col-md-6\"></div>\r\n");
      out.write("        <div class=\"col-md-6\">\r\n");
      out.write("            <table class=\"table\">\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Subtotal:</th>\r\n");
      out.write("                    <td>Rs. ");
      out.print( String.format("%.2f", grandTotal) );
      out.write("</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Discount:</th>\r\n");
      out.write("                    <td>");
      out.print( String.format("%.2f", order.getDiscount()) );
      out.write("%</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Total Amount:</th>\r\n");
      out.write("                    <td><strong>Rs.");
      out.print( String.format("%.2f", order.getTotalAmount()) );
      out.write("</strong></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"text-center mt-4 no-print\">\r\n");
      out.write("        <button class=\"btn btn-primary me-2\" onclick=\"window.print()\"><i class=\"fas fa-print me-1\"></i>Print</button>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/cashier\" class=\"btn btn-secondary\"><i class=\"fas fa-arrow-left me-1\"></i>Back</a>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
